plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.0'
  id 'io.spring.dependency-management' version '1.1.5'
  id "io.gitlab.plunts.plantuml" version "2.1.7"
}

group = 'ru.tbank.javaconf'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenLocal()
  mavenCentral()
}

classDiagrams {
  def modules = ["operations", "report", "tax"]
  diagram {
    name "Class Diagram"

    include packages().withName("ru.tbank.javaconf.modulism.module")
    exclude methods().thatAreAccessors()
    exclude fields()

    modules.each {
      exclude packages().withName("ru.tbank.javaconf.modulism.module.${it}.dto").recursive()
      exclude packages().withName("ru.tbank.javaconf.modulism.module.${it}.entity").recursive()
    }

    renderTo file('diagrams/classes.svg')
  }
}

dependencies {
  //lombok
  compileOnly 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'
  testCompileOnly 'org.projectlombok:lombok:1.18.32'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

  //deps
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'jakarta.validation:jakarta.validation-api'
  implementation 'org.springframework.kafka:spring-kafka'
  implementation 'org.springframework.modulith:spring-modulith-starter-core'
  implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
  implementation 'io.micrometer:micrometer-tracing'

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  runtimeOnly 'com.h2database:h2'

  // autoconfigured in runtime
  runtimeOnly 'org.liquibase:liquibase-core'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly 'io.micrometer:micrometer-tracing-bridge-brave'
  runtimeOnly 'io.zipkin.reporter2:zipkin-reporter-brave'
  runtimeOnly 'io.zipkin.brave:brave'
  runtimeOnly 'io.micrometer:micrometer-observation'
  runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

  // test
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
  testImplementation 'com.tngtech.archunit:archunit-junit5:1.3.0'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.modulith:spring-modulith-bom:1.2.0"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.2"
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
